esphome:
  name: hydro

esp32:
  board: esp32dev
  framework:
    type: arduino


logger:

# Home Assistant API
# api:
#   password: ""

# ota:
#   - platform: esphome
#     password: ""


wifi:
#  ssid: "HYF"
#  password: "Hydroponics2025!"
#  ssid: "ME50N"
#  password: "e4ngu123"
#  ssid: "S23 di Salvatore"
#  password: "ecdgm3ruv3r8yty"
  ssid: !secret wifi_ssid
  password: !secret wifi_password


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Hydro Fallback Hotspot"
    password: "W6ZBKmwmp4b3"


mqtt:
  broker: !secret mqtt_broker
  port: 1883

captive_portal:

## 11 June --------------------


i2c:
  sda: 21
  scl: 22
  scan: true
  frequency: 100kHz
  id: bus_i2c

ads1115:
  - address: 0x48

one_wire:
  - platform: gpio
    pin: 27

#sensor:
#  - platform: dallas_temp    
#    name: temperature
#    update_interval: 10s

# sensore ph
sensor:
## PH sensor
  - platform: ads1115
    #i2c_id: bus_i2c
    update_interval: 5s
    id: phSensor
    #address: 0x48
    multiplexer: 'A0_GND'
    gain: 6.144
    name: "A0 PH"
    filters: 
      - calibrate_linear:
          - 2.55 -> 7.0
          - 3.07 -> 4.00
    unit_of_measurement: PH

## temp
  - platform: dallas_temp    
    name: "Temperature Sensor"
    id: tempSensor
    update_interval: 5s

## EC sensor    
  - platform: ads1115
    #i2c_id: bus_i2c
    id: ecSensor
    update_interval: 5s
    #0address: 0x48
    multiplexer: 'A1_GND'
    gain: 4.096
    name: "A1 EC"
         

font:
    # gfonts://family[@weight]
  - file: "gfonts://IBM Plex Mono"
    id: roboto_20
    size: 12

display:
  - platform: ssd1306_i2c
    id: displayID
    model: "SSD1306 128x64"
    address: 0x3C
    update_interval: 2s
    lambda: |-
      float ev_reading=id(ecSensor).state;
      float read_voltage=ev_reading;
      float compensationCoefficient=1.0+0.02*(id(tempSensor).state-25.0);
      float compensationVoltage=read_voltage/compensationCoefficient;
      float valore = ((pow(compensationVoltage,3)*133.42)-(pow(compensationVoltage,2)*255.86)+(compensationVoltage*857.39))*0.5;
      it.print(0,0,id(roboto_20),"  pH |  EC  |  TÂ° ");
      it.print(0,15,id(roboto_20),"------------------");
      it.printf(0,30,id(roboto_20)," %2.2f %2.2f %2.2f",id(phSensor).state, valore, id(tempSensor).state);

##     EC 1.89 V -> 707 ppm
##     EC 0.40 V -> 123 ppm